var D=(s,e)=>(e=Symbol[s])?e:Symbol.for("Symbol."+s),P=s=>{throw TypeError(s)};var b=(s,e,t)=>{if(e!=null){typeof e!="object"&&typeof e!="function"&&P("Object expected");var i,u;t&&(i=e[D("asyncDispose")]),i===void 0&&(i=e[D("dispose")],t&&(u=i)),typeof i!="function"&&P("Object not disposable"),u&&(i=function(){try{u.call(this)}catch(o){return Promise.reject(o)}}),s.push([t,i,e])}else t&&s.push([t]);return e},y=(s,e,t)=>{var i=typeof SuppressedError=="function"?SuppressedError:function(a,c,r,n){return n=Error(r),n.name="SuppressedError",n.error=a,n.suppressed=c,n},u=a=>e=t?new i(a,e,"An error was suppressed during disposal"):(t=!0,a),o=a=>{for(;a=s.pop();)try{var c=a[1]&&a[1].call(a[2]);if(a[0])return Promise.resolve(c).then(o,r=>(u(r),o()))}catch(r){u(r)}if(t)throw e};return o()};import{compile as F,env as U,Features as m,Instrumentation as B,normalizePath as x}from"@tailwindcss/node";import{clearRequireCache as V}from"@tailwindcss/node/require-cache";import{Scanner as A}from"@tailwindcss/oxide";import{Features as h,transform as G}from"lightningcss";import w from"node:fs/promises";import p from"node:path";var d=U.DEBUG,J=/[?&](?:worker|sharedworker|raw|url)\b/,L=/\?commonjs-proxy/,z=/[?&]index\=\d+\.css$/;function K(){let s=[],e=null,t=!1,i=!1,u=new R(o=>{let a=e.createResolver({...e.resolve,extensions:[".css"],mainFields:["style"],conditions:["style","development|production"],tryIndex:!1,preferRelative:!0});function c(l,f){return a(l,f,!0,t)}let r=e.createResolver(e.resolve);function n(l,f){return r(l,f,!0,t)}return new C(o,e.root,c,n)});return[{name:"@tailwindcss/vite:scan",enforce:"pre",configureServer(o){s.push(o)},async configResolved(o){e=o,i=e.build.cssMinify!==!1,t=e.build.ssr!==!1&&e.build.ssr!==void 0}},{name:"@tailwindcss/vite:generate:serve",apply:"serve",enforce:"pre",async transform(o,a,c){var f=[];try{if(!E(a))return;let r=b(f,new B);d&&r.start("[@tailwindcss/vite] Generate CSS (serve)");let n=u.get(a);let l=await n.generate(o,_=>this.addWatchFile(_),r);if(!l)return u.delete(a),o;d&&r.end("[@tailwindcss/vite] Generate CSS (serve)");return{code:l}}catch(g){var v=g,S=!0}finally{y(f,v,S)}}},{name:"@tailwindcss/vite:generate:build",apply:"build",enforce:"pre",async transform(o,a){var l=[];try{if(!E(a))return;let c=b(l,new B);d&&c.start("[@tailwindcss/vite] Generate CSS (build)");let r=u.get(a);let n=await r.generate(o,S=>this.addWatchFile(S),c);if(!n)return u.delete(a),o;d&&c.end("[@tailwindcss/vite] Generate CSS (build)");d&&c.start("[@tailwindcss/vite] Optimize CSS");n=T(n,{minify:i});d&&c.end("[@tailwindcss/vite] Optimize CSS");return{code:n}}catch(f){var g=f,v=!0}finally{y(l,g,v)}}}]}function O(s){let[e]=s.split("?",2);return p.extname(e).slice(1)}function E(s){return s.includes("/.vite/")?void 0:(O(s)==="css"||s.includes("&lang.css")||s.match(z))&&!J.test(s)&&!L.test(s)}function T(s,{file:e="input.css",minify:t=!1}={}){function i(u){return G({filename:e,code:u,minify:t,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:h.Nesting,exclude:h.LogicalProperties|h.DirSelector|h.LightDark,targets:{safari:16<<16|1024,ios_saf:16<<16|1024,firefox:8388608,chrome:7274496},errorRecovery:!0}).code}return i(i(Buffer.from(s))).toString()}function M(s){return p.resolve(s.replace(/\?.*$/,""))}var R=class extends Map{constructor(t){super();this.factory=t}get(t){let i=super.get(t);return i===void 0&&(i=this.factory(t,this),this.set(t,i)),i}},C=class{constructor(e,t,i,u){this.id=e;this.base=t;this.customCssResolver=i;this.customJsResolver=u}compiler;scanner;candidates=new Set;buildDependencies=new Map;async generate(e,t,i){let u=this.requiresBuild(),o=M(this.id),a=p.dirname(p.resolve(o));if(!this.compiler||!this.scanner||await u){V(Array.from(this.buildDependencies.keys())),this.buildDependencies.clear(),this.addBuildDependency(M(o)),d&&i.start("Setup compiler");let r=[];this.compiler=await F(e,{base:a,shouldRewriteUrls:!0,onDependency:l=>{t(l),r.push(this.addBuildDependency(l))},customCssResolver:this.customCssResolver,customJsResolver:this.customJsResolver}),await Promise.all(r),d&&i.end("Setup compiler"),d&&i.start("Setup scanner");let n=(this.compiler.root==="none"?[]:this.compiler.root===null?[{base:this.base,pattern:"**/*"}]:[this.compiler.root]).concat(this.compiler.globs);this.scanner=new A({sources:n}),d&&i.end("Setup scanner")}if(!(this.compiler.features&(m.AtApply|m.JsPluginCompat|m.ThemeFunction|m.Utilities)))return!1;if(this.compiler.features&m.Utilities){d&&i.start("Scan for candidates");for(let r of this.scanner.scan())this.candidates.add(r);d&&i.end("Scan for candidates")}if(this.compiler.features&m.Utilities){for(let r of this.scanner.files)t(r);for(let r of this.scanner.globs){if(r.pattern[0]==="!")continue;let n=p.relative(this.base,r.base);n[0]!=="."&&(n="./"+n),n=x(n),t(p.posix.join(n,r.pattern));let l=this.compiler.root;if(l!=="none"&&l!==null){let f=x(p.resolve(l.base,l.pattern));if(!await w.stat(f).then(v=>v.isDirectory(),()=>!1))throw new Error(`The path given to \`source(\u2026)\` must be a directory but got \`source(${f})\` instead.`)}}}d&&i.start("Build CSS");let c=this.compiler.build([...this.candidates]);return d&&i.end("Build CSS"),c}async addBuildDependency(e){let t=null;try{t=(await w.stat(e)).mtimeMs}catch{}this.buildDependencies.set(e,t)}async requiresBuild(){for(let[e,t]of this.buildDependencies){if(t===null)return!0;try{if((await w.stat(e)).mtimeMs>t)return!0}catch{return!0}}return!1}};export{K as default};
